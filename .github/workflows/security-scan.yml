name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan every Monday at 2 AM UTC
    - cron: '0 2 * * 1'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Check for npm vulnerabilities
      run: |
        if [ -f package.json ]; then
          echo "🔍 Scanning npm dependencies..."
          npm audit --audit-level=moderate || echo "⚠️ Vulnerabilities found, but continuing..."

          echo "## 🔒 Dependency Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          npm audit || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "No package.json found, skipping npm audit"
        fi

  secret-scan:
    name: Scan for Exposed Secrets
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comprehensive scan

    - name: Scan for secrets
      run: |
        echo "🔍 Scanning for exposed secrets..."

        # Patterns to search for
        declare -a PATTERNS=(
          "password\s*=\s*['\"][^'\"]{3,}['\"]"
          "api[_-]?key\s*[=:]\s*['\"][^'\"]{10,}['\"]"
          "secret\s*[=:]\s*['\"][^'\"]{10,}['\"]"
          "token\s*[=:]\s*['\"][^'\"]{20,}['\"]"
          "private[_-]?key"
          "-----BEGIN.*PRIVATE KEY-----"
          "SK_live_"
          "sk_test_"
          "access_token"
          "auth_token"
          "AKIA[0-9A-Z]{16}"  # AWS Access Key
          "AIza[0-9A-Za-z-_]{35}"  # Google API Key
        )

        SECRETS_FOUND=0

        for pattern in "${PATTERNS[@]}"; do
          echo "Checking pattern: $pattern"

          if git grep -niE "$pattern" | grep -v "example" | grep -v "placeholder" | grep -v "TODO" | grep -v ".github/workflows"; then
            echo "⚠️ Potential secret found matching pattern: $pattern"
            SECRETS_FOUND=1
          fi
        done

        if [ $SECRETS_FOUND -eq 0 ]; then
          echo "✅ No exposed secrets detected"
        else
          echo "❌ Potential secrets found - please review!"
          echo ""
          echo "## ⚠️ Secret Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Potential secrets detected in the codebase." >> $GITHUB_STEP_SUMMARY
          echo "Please review the logs and remove any exposed credentials." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

  code-quality:
    name: Code Quality & Security Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for SQL injection vulnerabilities
      run: |
        echo "🔍 Scanning for SQL injection risks..."

        if grep -riE "(SELECT|INSERT|UPDATE|DELETE).*\+.*req\.(body|query|params)" *.js; then
          echo "⚠️ Potential SQL injection vulnerability detected"
          echo "Use parameterized queries instead of string concatenation"
        else
          echo "✅ No obvious SQL injection patterns found"
        fi

    - name: Check for XSS vulnerabilities
      run: |
        echo "🔍 Scanning for XSS risks..."

        if grep -riE "innerHTML\s*=\s*.*\+|document\.write\(.*\+|eval\(" *.js *.html; then
          echo "⚠️ Potential XSS vulnerability detected"
          echo "Avoid using innerHTML with concatenated strings and eval()"
        else
          echo "✅ No obvious XSS patterns found"
        fi

    - name: Check for insecure HTTP requests
      run: |
        echo "🔍 Scanning for insecure HTTP requests..."

        if grep -riE "http://(?!localhost)" *.js *.html | grep -v "http://www.w3.org"; then
          echo "⚠️ Insecure HTTP requests detected"
          echo "Use HTTPS instead of HTTP for external requests"
        else
          echo "✅ All external requests use HTTPS"
        fi

    - name: Check for weak crypto
      run: |
        echo "🔍 Scanning for weak cryptography..."

        if grep -riE "md5|sha1\(" *.js; then
          echo "⚠️ Weak hashing algorithm detected (MD5 or SHA1)"
          echo "Use SHA-256 or better"
        else
          echo "✅ No weak cryptography found"
        fi

  smart-contract-audit:
    name: Smart Contract Security
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for Solidity files
      id: check-solidity
      run: |
        if find . -name "*.sol" -type f | grep -q .; then
          echo "has_solidity=true" >> $GITHUB_OUTPUT
          echo "✅ Solidity files found"
        else
          echo "has_solidity=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No Solidity files to scan"
        fi

    - name: Audit smart contracts
      if: steps.check-solidity.outputs.has_solidity == 'true'
      run: |
        echo "🔍 Basic smart contract security checks..."

        # Check for common vulnerabilities
        echo "Checking for reentrancy patterns..."
        if grep -r "call.value" --include="*.sol"; then
          echo "⚠️ Found .call.value() - potential reentrancy risk"
        fi

        echo "Checking for unprotected selfdestruct..."
        if grep -r "selfdestruct" --include="*.sol"; then
          echo "⚠️ Found selfdestruct - ensure it's protected"
        fi

        echo "Checking for tx.origin usage..."
        if grep -r "tx.origin" --include="*.sol"; then
          echo "⚠️ Found tx.origin - use msg.sender instead"
        fi

        echo "✅ Basic smart contract checks completed"

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, secret-scan, code-quality, smart-contract-audit]
    if: always()

    steps:
    - name: Generate security report
      run: |
        echo "## 🛡️ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Scans Completed:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Dependency vulnerability scan" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Secret exposure scan" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Code quality analysis" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Smart contract audit" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Security Checks:" >> $GITHUB_STEP_SUMMARY
        echo "- SQL Injection patterns" >> $GITHUB_STEP_SUMMARY
        echo "- XSS vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "- Insecure HTTP requests" >> $GITHUB_STEP_SUMMARY
        echo "- Weak cryptography" >> $GITHUB_STEP_SUMMARY
        echo "- Exposed secrets" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔒 **Security is a priority for La Tanda Web3**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "For security issues, please report privately to security@latanda.online" >> $GITHUB_STEP_SUMMARY
